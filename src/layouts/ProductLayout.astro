---
import Layout from './BaseLayout.astro';

import DetailsTable from '../components/DetailsTable.astro';
import ImageGrid from '../components/ImageGrid.astro';
import Button from '../components/Button.astro';
import Breadcrumbs from '../components/Breadcrumbs.astro';
import Modal from '../components/Modal.astro';
import CustomerForm from '../components/CustomerForm.astro';
import Tag from '../components/Tag.astro';

const { frontmatter: fm } = Astro.props;

const formatPrice = (price: number) => new Intl.NumberFormat('ru-RU', { style: 'currency', currency: 'RUB', maximumFractionDigits: 0 }).format(price);
---

<Layout title=`${fm.name} | РОСМЕБЕЛЬ`>
	<main>
		<article class="section-block">
			<div class="container container-grid product">
				<Breadcrumbs class="product__breadcrumbs"  currentPage={fm.name} />
			</div>
			<div class="product__grid">
				<ImageGrid class="product__images" images={[...fm.images]} />
				<div class="product__content">
					<div>
						<div class="product__info">
							<Tag class="product__category" size="lg">{fm.category}</Tag>
							<Tag class:list={["product__availibility", { "isAvailible": fm.isAvailable }]} size="lg">● {fm.isAvailable ? 'В наличии' : 'Под заказ'}</Tag>
							<h1 class="product__name">{fm.name}</h1>
							{ fm.price && <h2 class="product__price">от {formatPrice(fm.price)} за п/м</h2> }
							<hr />
							<DetailsTable details={fm.details} />
	
							<hr />
							<slot />
						</div>
						<div class="product__actions">
							<Modal id="product-modal" data-theme="light">
								<Button
									slot="trigger"
									appearance="ghost"
									onclick="openDialog('product-modal')"
								>Вызвать замерщика</Button>
								<CustomerForm id="product-form" method="dialog"/>
								<span class="label" slot="title">Заказать обратный звонок</span>
							</Modal>
							<Button disabled>Расчитать стоимость</Button>
						</div>
					</div>
				</div>
			</div>
		</article>
	</main>
</Layout>

<style lang="scss">
	@import "../styles/_breakpoints.scss";

	.product {
		&__grid {
			display: grid;
			grid-template-columns: repeat(2, 1fr);
			gap: 1.25rem;

			@include breakpoint(md) {
				grid-template-columns: repeat(4, 1fr);
			}

			@include breakpoint(xl) {
				grid-template-columns: repeat(12, 1fr);
			}
		}

		&__breadcrumbs,
		&__images,
		&__content {
			grid-column: 1 / -1;
		}

		&__availibility {
			--text-color-highlight: var(--clr-info);

			&.isAvailible {
				--text-color-highlight: var(--clr-success);
			}
		}

		&__content > div {
			display: flex;
			flex-direction: column;
			gap: 2rem;
			margin-inline: 2rem;
		}

		&__actions {
			display: flex;
			flex-direction: column;
			gap: 0.625rem;
		}

		&__name {
			font-family: var(--font-family-secondary);
			color: var(--accent-color);
		}

		&__name,
		&__price {
			margin: 0.25rem 0;
		}

		@include breakpoint(md) {
			&__images,
			&__content {
				grid-column: span 2;
			}
		}

		@include breakpoint(xl) {
			&__images {
				grid-column: 1 / 8;
			}

			&__content {
				grid-column: 8 / 13;

				& > div {
					max-width: 60ch;
					margin-inline: 0;
				}
			}
		}
	}
</style>