---
import { Icon } from 'astro-icon/components';

export interface StepProps {
	icon?: string;
	title: string;
	text: string;
}

interface Props extends astroHTML.JSX.OlHTMLAttributes {
	steps: StepProps[];
}

const { steps, ...rest } = Astro.props;
---

<ol class:list={["steps", rest.class]} {...rest}>
	{steps && steps.map((step) => (
		<li class="steps__item">
			{step.icon && <Icon name={step.icon} />}
			<h4 class="steps__title">{step.title}</h4>
			<p class="steps__text">{step.text}</p>
		</li>
	))}
</ol>

{/* GSAP animations */}
<script>
	const tl = gsap.timeline({ scrollTrigger: { trigger: ".steps" }, defaults: { opacity: 0, ease: "back" } });

	function init() {
		tl.from(".steps", { ease: "linear", autoAlpha: 0 })
			.from(".steps > *", {
				y: 150,
				stagger: 0.5
			}, ">")
	}

	window.addEventListener("load", () => init());
</script>

<style lang="scss">
	@import "../styles/_breakpoints.scss";

	[data-icon] {
		z-index: 1;
		font-size: 4rem;
		color: var(--clr-primary-100);

		@include breakpoint(lg) {
			font-size: 5rem;
		}
	}

	.steps {
		counter-reset: steps 0;

		display: flex;
		flex-direction: column;

		margin: 0;
		padding: 0;

		list-style: none;

		&__item {
			counter-increment: steps 1;

			position: relative;

			overflow-y: hidden;
			display: flex;
			flex: 1 1 100%;
			flex-direction: column;
			gap: 1rem;
			align-items: center;

			box-sizing: border-box;
			height: fit-content;
			padding: 1.5rem 0.625rem;

			border-bottom: 1px solid var(--clr-400);

			&::after {
				content: "0"counter(steps);

				position: absolute;
				inset: 0;

				font-family: var(--font-family-secondary);
				font-size: 4rem;
				color: var(--clr-pastel-green);
			}

			&::before {
				content: "";

				position: absolute;
				z-index: 0;
				inset: 100% 0 0;

				height: 100%;

				background-color: var(--clr-secondary-400);

				transition: .5s;
			}

			&:first-child {
				border-top: 1px solid var(--clr-400);
			}

			&:hover {
				&::before {
					inset: 0;
				}

				&::after {
					color: var(--clr-pastel-red);
					transition: .7s;
				}

				& [data-icon] {
					color: var(--clr-pastel-red);
					transition: .3s;
				}
			}
		}

		&__title,
		&__text {
			z-index: 1;
			margin: 0;
			text-align: center;
		}

		@include breakpoint(lg) {
			flex-direction: row;

			&__item {
				height: 29rem;
				border-right: 1px solid var(--clr-400);
				border-bottom: none;

				&:first-child {
					border-top: none;
					border-left: 1px solid var(--clr-400);
				}
			}
		}
	}
</style>

