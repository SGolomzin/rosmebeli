---
import Rating from './Rating.astro';
import Modal from './Modal.astro';
import IconButton from './IconButton.astro';
import Card from './Card.astro';

interface Props {
	image?: {
		url: string;
		alt?: string;
	};
	name: string;
	city: string;
	rating: number;
	text: string;
	isLongText?: boolean;
}

const { image, name, city, rating, text, isLongText } = Astro.props;
---

<Card
	class="review"
	filled
	bordered
	shaded
>
	<div class="review__thumbnail">
		{image && (
			<img src={image.url} alt={image.alt} />
			<Modal id={`review__modal--${name}`}>
				<img src={image.url} alt={image.alt} />
				<IconButton
					class="review__zoom-button"
					shape="round"
					icon="zoom-in"
					slot="trigger"
					onclick={`openDialog('review__modal--${name}')`}
				/>
			</Modal>
		)}
	</div>
	<Card class="review__content">
		<h4 class="review__name">{name}</h4>
		<p class="review__city label-sm">{city}</p>
		<p class="review__text">“{text}”</p>
		<span class="review__read-more">
			{isLongText && (<a>Читать далее</a>)}
		</span>
		<Rating rating={rating} />
	</Card>
</Card>

<style lang="scss">
	@import "../styles/_design.scss";

	.review {
		--review-img-height: 12.5rem;

		display: grid;
		grid-template-columns: 1fr;
		grid-template-rows: var(--review-img-height) auto;

		max-width: 25rem;
		margin-top: 1rem;
		margin-bottom: 1rem;

		text-align: center;

		@include scaleOnHover(1.05);

		&__zoom-button {
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);

			visibility: hidden;
			opacity: 0;

			transition: visibility 0s linear 300ms, opacity 300ms;
		}

		&__thumbnail {
			position: relative;
			background-color: var(--clr-secondary-100);

			& > img {
				display: block;
				width: 100%;
				height: var(--review-img-height);
				object-fit: cover;
			}

			// &:has(img) {
			// 	@include styledBackgroundOnHover(rgba(0,0,0,0.33));
			// }

			&:hover .review__zoom-button {
				z-index: 2;
				visibility: visible;
				opacity: 1;
				transition: visibility 0s linear 0s, opacity 300ms;
			}
	}

		&__content {
			display: grid;
			grid-template-columns: 1fr;
			grid-template-rows: auto auto 1fr 1.5rem auto;
			gap: 0.25rem;
			justify-items: center;
		}

		&__name {
			margin: 0;
		}

		&__city {
			margin: 0;
			color: var(--clr-400);
		}

		&__text {
			overflow: hidden;
			display: -webkit-box;
			-webkit-box-orient: vertical;

			min-height: 7.5em;
			margin: 0;

			overflow-wrap: break-word;

			-webkit-line-clamp: 5;
		}
	}
</style>