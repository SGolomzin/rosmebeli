---
interface Props extends astroHTML.JSX.HTMLAttributes {
	title: string;
	tag?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6";
}

import TextWrapper from './TextWrapper.astro';

const { title, tag: Element = "h1", class: className, ...props} = Astro.props;
---
<Element class:list={["animated-heading", className]} {...props}><TextWrapper text={title} splitByChar /></Element>

{/* GSAP animations */}
<script>
	function init() {
		gsap.utils.toArray<HTMLElement>(".animated-heading").forEach((heading) => {
			const words = heading.childNodes;
			const chars = [] as ChildNode[];

			gsap.utils.toArray<HTMLElement>(words).forEach((word) => {
				chars.push(...word.childNodes);
			});

			ScrollTrigger.batch(gsap.utils.toArray<HTMLElement>(chars), {
				onEnter: (elements, triggers) => {
					gsap.fromTo(elements, {
						y: 30,
						opacity: 0,
					},
					{
						y: 0,
						opacity: 1,
						stagger: 0.04,
						ease: "power4.out"
					});
				},
				once: true
			});
		})
	}

	window.addEventListener("load", () => init());
</script>