---
import { Icon } from 'astro-icon/components';

import AnimatedHeading from '../AnimatedHeading.astro';
import CustomerForm from '../CustomerForm.astro';
import Card from '../Card.astro';

import YMap from '../YMap.astro';

const Addresses = [
	{
		label: "Адрес салона",
		place: "Строй двор Яуза",
		address: "МО, Осташковское шоссе, 4с2, ТСК 2, пав. 2-23",
	},
	{
		label: "Скоро открытие",
		place: "ТЦ ЭлитСтрой",
		address: "МО, Одинцовский район, рабочий посёлок Заречье, Торговая улица, с2"
	},
	{
		label: "Скоро открытие",
		place: "МТК ГРАНД",
		address: "МО, Химки, улица Бутаково, 4",
	},
	{
		label: "Скоро открытие",
		place: "МЦ Roomer",
		address: "Москва, улица Ленинская Слобода, 26"
	}
]
---

<section id="contacts" class="section-block">
	<div class="container container-grid">
		<AnimatedHeading
			class="container-grid__heading"
			title="Контакты"
		/>
		<ul class="contacts__address-list">
			{Addresses.map((a) => (
				<li>
					<div class="contacts__address-label">
						<Icon name="map-pin" />
						<span>{a.label}</span>
					</div>
					<p><strong>{a.place}</strong> <br/> {a.address}</p>
				</li>
			))}
		</ul>
	</div>
	<div class="map-container">
		<div class="container">
			<div class="map-container__map">
				<YMap />
			</div>
			<div class="map-container__form">
				<Card class="contacts-form-card" data-theme="dark">
					<span class="pseudo-h4">Заказать обратный звонок</span>
					<CustomerForm id="contacts-form"/>
				</Card>
			</div>
		</div>
	</div>
</section>

{/* GSAP animations */}
<script>
	const tl = gsap.timeline({ scrollTrigger: { trigger: ".contacts__address-list" }, defaults:{ opacity: 0, ease: "linear" }});

	function init() {
		tl.from(".contacts__address-list", { autoAlpha: 0 })
			.from(".contacts__address-list > *", {
				ease: "back",
				y: 150,
				stagger: 0.5
			})
			.from(".contacts-form-card", { autoAlpha: 0 }, "<")
	}

	window.addEventListener("load", init);
</script>

<style lang="scss">
	@import "../../styles/_breakpoints.scss";

	#contacts {
		--section-bottom-padding: 0;
	}

	.contacts {
		&__address {
			&-list {
				--contacts-adress-columns: 1;

				display: grid;
				grid-column: 1 / -1;
				grid-template-columns: repeat(var(--contacts-adress-columns), 1fr);
				gap: 2rem 1.25rem;

				margin: 0 0 2rem;
				padding: 0;

				list-style: none;

				@include breakpoint(sm) {
					--contacts-adress-columns: 2;
				}

				@include breakpoint(lg) {
					--contacts-adress-columns: 4;
				}
			}

			&-label {
				display: flex;
				gap: 0.5rem;
				align-items: center;
				color: color-mix(in srgb, currentcolor 50%, transparent);
			}
		}
	}

	.map-container {
		position: relative;

		.container {
			display: grid;
			grid-template-columns: 100%;
			grid-template-rows: 600px 1fr;
			gap: 2rem;
		}

		&__map {
			position: absolute;
			top: 0;
			left: 0;

			width: 100%;
			height: 100%;
		}

		&__form {
			z-index: 2;
			grid-row: 2 / 3;

			.contacts-form-card {
				& > span {
					font-family: var(--font-family-secondary);
					text-align: center;
				}
			}
		}

		@include breakpoint(lg) {
			.container {
				grid-template-rows: auto 1fr auto;
				height: 600px;
			}

			&__map {
				grid-column: 1 / -1;
				grid-row: 1 / -1;
			}

			&__form {
				grid-column: 1 / -1;
				grid-row: 2 / 3;
				place-self: center flex-end;

				.contacts-form-card {
					place-self: center flex-end;
					padding: 2rem 2rem 3.5rem 3rem;
					background-color: var(--background-color);
					border: 3px solid var(--text-color-dim);
				}
			}
		}
	}
</style>