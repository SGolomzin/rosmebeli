---
import { getCollection } from "astro:content";
import type { CollectionEntry } from 'astro:content';
type ReviewsType = CollectionEntry<'reviews'>

import { baseUrl } from '../../helpers/helpers';

import AnimatedHeading from "../AnimatedHeading.astro";
import Review from "../Review.astro";
import Link from "../Link.astro";

function Shuffle(arr: any[]) {
	for (var i = arr.length - 1; i > 0; i--) {
		var j = Math.floor(Math.random() * (i + 1));
		var temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
	}
	return arr;
}

const allReviews = await getCollection("reviews");
const reviews = Shuffle(allReviews).slice(0, 5);
---

<section
	id="reviews"
	class="section-block"
	data-theme="light"
>
	<div class="container">
		<AnimatedHeading class="reviews-heading" title="Отзывы Наших Клиентов" />

		<swiper-container
			id="reviews-slider"
			autoplay="true"
			loop="true"
			pagination="true"
			direction="vertical"
		>
			{reviews.map((review: ReviewsType) => (
				<swiper-slide>
					<Review {...review.data} />
				</swiper-slide>
				))
			}
		</swiper-container>

		<div class="reviews-link__wrapper">
			<Link class="reviews-link" href={baseUrl("reviews")} appearance="button-ghost" icon="arrow-right">Посмотреть все отзывы</Link>
		</div>
	</div>
</section>

<script>
	import type { SwiperContainer } from 'swiper/element/bundle';

	const slider = document.getElementById('reviews-slider') as SwiperContainer;


	if (slider) {
		Object.assign(slider, { autoplay: { delay: 5000 }});
	}
</script>

<style lang="scss">
	@import "../../styles/_breakpoints.scss";

	section {
		--section-bottom-padding: 0;
	}

	swiper-container {
		background-color: var(--clr-secondary-100);
	}

	swiper-slide {
		display: flex;
		place-items: center;
		place-self: center center;

		width: 100%;
		max-width: 80ch;
	}

	.reviews-heading {
		text-align: center;
	}

	.reviews-link {
		&__wrapper {
			display: flex;
			justify-content: center;
			margin-top: 2rem;
		}
	}

	#reviews-slider {
		height: 33rem;

		@include breakpoint(xl) {
			height: 23rem;
		}
	}
</style>