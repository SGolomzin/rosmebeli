---
import { getCollection } from "astro:content";
import type { CollectionEntry } from 'astro:content';
type ReviewsType = CollectionEntry<'reviews'>

import AnimatedHeading from "../AnimatedHeading.astro";
import Review from "../Review.astro";
import IconButton from "../IconButton.astro";

const allReviews = await getCollection("reviews");
---
<section
	id="reviews"
	class="section-block"
	data-theme="light"
>
	<div class="container">
		<AnimatedHeading class="reviews-heading" title="Отзывы Наших Клиентов" />

		<swiper-container
			id="reviews-slider"
			centered-slides="true"
			centered-slides-bounds="true"
			space-between="20"
			loop="true"
			keyboard="true"
		>
			{allReviews.map((review: ReviewsType) => (
				<swiper-slide>
					<Review {...review.data} />
				</swiper-slide>
				))
			}
		</swiper-container>
		<IconButton id="reviews-slider-button-prev" shape="round" size="lg" icon="chevron-left" aria-label="Предыдущий отзыв" />
		<IconButton id="reviews-slider-button-next" shape="round" size="lg" icon="chevron-right" aria-label="Следующий отзыв" />
</section>

<script>
	import type { SwiperContainer } from 'swiper/element/bundle';

	const slider: SwiperContainer | null = document.querySelector('#reviews-slider');
	const buttonPrev = document.getElementById('reviews-slider-button-prev');
	const buttonNext = document.getElementById('reviews-slider-button-next');

	const breakpoints = {
    0: {
      slidesPerView: 1
    },
    768: {
      slidesPerView: 2
    },
		1200: {
			slidesPerView: 3
		}
  }

	if (slider) {
		Object.assign(slider, { breakpoints: breakpoints });
	}

	buttonPrev?.addEventListener('click', () => {
		slider?.swiper.slidePrev();
	})

	buttonNext?.addEventListener('click', () => {
		slider?.swiper.slideNext();
	})
</script>

<style lang="scss">
	swiper-slide {
		width: min(25rem, 80vw);
	}

	.container {
		position: relative;

		.reviews-heading {
			text-align: center;
		}
	}

	#reviews-slider-button {
		&-prev,
		&-next {
			position: absolute;
			z-index: 1;
		}

		&-prev {
			top: 50%;
			left: 0;
		}

		&-next {
			top: 50%;
			right: 0;
		}
	}
</style>