---
import { getCollection } from "astro:content";

import AnimatedHeading from "../AnimatedHeading.astro";
import CatalogCard from "../CatalogCard.astro";
import Link from "../Link.astro";
import IconButton from "../IconButton.astro";

const allProducts = await getCollection("catalog");
---


<section id="catalog" class="section-block">
	<div class="container container-grid">
		<div class="container-grid__heading">
			<AnimatedHeading class="catalog-heading" title="Наши работы" tag="h1" />
			<div class="container-grid__heading-slogan">
				<p>Мы создаем мебель, которая вдохновляет.</p>
				<Link href="/rosmebeli/catalog" appearance="button-ghost" icon="arrow-right">Перейти в каталог</Link>
			</div>
		</div>
		<div class="container-grid__content">
			<swiper-container
				id="catalog-slider"
				space-between="20"
				slides-per-view="auto"
				keyboard="true"
			>
				{
					allProducts.map((product) => (
						<swiper-slide>
							<CatalogCard product={product} />
						</swiper-slide>
					))
				}
			</swiper-container>
			<IconButton id="catalog-slider-button-prev" size="lg" icon="chevron-left" aria-label="Предыдущая работа" disabled />
			<IconButton id="catalog-slider-button-next" size="lg" icon="chevron-right" aria-label="Следующая работа" />
		</div>
	</div>
</section>

<script>
	import type { SwiperContainer } from 'swiper/element/bundle';

	const slider: SwiperContainer | null = document.querySelector('#catalog-slider');
	const buttonPrev = document.getElementById('catalog-slider-button-prev') as HTMLButtonElement;
	const buttonNext = document.getElementById('catalog-slider-button-next') as HTMLButtonElement;

	const breakpoints = {
    0: {
      slidesPerView: 1
    },
    768: {
      slidesPerView: 2
    },
		1200: {
			slidesPerView: "auto"
		}
  }

	if (slider) {
		Object.assign(slider, { breakpoints: breakpoints });
	}

	buttonPrev?.addEventListener('click', () => {
		slider?.swiper.slidePrev();
	})

	buttonNext?.addEventListener('click', () => {
		slider?.swiper.slideNext();
	})

	slider?.swiper.on('slideChange', function () {
		if (slider.swiper.isBeginning && buttonPrev) {
			buttonPrev.disabled = true;
		} else {
			buttonPrev.disabled = false;
		}

		if (slider.swiper.isEnd && buttonNext) {
			buttonNext.disabled = true;
		} else {
			buttonNext.disabled = false;
		}
	});
</script>

<style lang="scss">
	@import "../../styles/_design.scss";
	@import "../../styles/_breakpoints.scss";

	.container {
		position: relative;
	}

	.container-grid__heading {
		& .catalog-heading {
			margin: 0;
		}

		&-slogan {
			display: flex;
			flex-direction: column;
			justify-content: space-between;

			@include breakpoint(md) {
				flex-direction: row;
				align-items: baseline;
			}
		}
	}

	#catalog-slider-button {
		&-prev,
		&-next {
			position: absolute;
			z-index: 1;
		}

		&-prev {
			top: 50%;
			left: 0;
		}

		&-next {
			top: 50%;
			right: 0;
		}
	}
</style>