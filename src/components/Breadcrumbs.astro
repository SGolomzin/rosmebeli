---
const paths = Astro.url.pathname.split('/').filter(x => x);

interface Props extends astroHTML.JSX.HTMLAttributes {
	currentPage?: string;
}

import { Icon } from 'astro-icon/components';

import { baseUrl } from '../helpers/helpers';

const PagenameLocalization = {
	"catalog": "Каталог",
	"posts": "Статьи",
};

let parts = [{
	pageName: 'Главная',
	href: baseUrl('./')
}];

paths.forEach((path, i) => {
  const href = `/${paths.slice(0, i + 1).join('/')}`;
	// Заменяем - и _ на пробел
	let pageName = path.replace(/[-_]/g, ' ');
	// Переводим название страницы на русский язык (если возможно)
	if (pageName in PagenameLocalization) {
		pageName = PagenameLocalization[pageName as keyof typeof PagenameLocalization];
	}
	// убраем  base ссылку
	if (pageName === 'rosmebeli') return;

  parts.push({
		pageName,
		href
	});
})

const { currentPage, class: className, ...rest } = Astro.props;
---

<nav
	class:list={[
		"breadcrumbs",
		className
	]}
	aria-label="Хлебные крошки"
	{...rest}
>
  <ol class="breadcrumbs" role="list">
    {parts.map(({ pageName, href }, i) => <li class="breadcrumbs__item" role="listitem">
			{i !== 0 ? <Icon name="chevron-right" /> : null}
			{i === parts.length - 1
				? <span>{currentPage ? currentPage : pageName}</span>
				: <a href={href}>{pageName}</a>
			}
		</li>)}
  </ol>
</nav>

<style lang="scss">
	.breadcrumbs {
		display: flex;
		flex-wrap: wrap;

		margin: 0 0 0.5rem;
		padding: 0;

		line-height: 150%;
		list-style: none;

		&__item {
			display: flex;
			align-items: center;

			span {
				font-weight: bold;
			}
		}

		[data-icon] {
			width: 1.2lh;
			height: 1.2lh;
		}
	}
</style>